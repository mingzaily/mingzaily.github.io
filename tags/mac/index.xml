<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mac on 星河</title>
    <link>/tags/mac/</link>
    <description>Recent content in Mac on 星河</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 05 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/mac/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mac 配置 zsh</title>
      <link>/post/2024/02/05/54/</link>
      <pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate>
      <guid>/post/2024/02/05/54/</guid>
      <description>&lt;h2 id=&#34;1-使用-zsh-作为默认-shell&#34;&gt;1. 使用 zsh 作为默认 shell&lt;/h2&gt;&#xA;&lt;p&gt;从 macOS Catalina 版开始，您的 Mac 将使用 zsh 作为默认登录 Shell 和交互式 Shell。您还可以在较低版本的 macOS 中将 zsh 设置为默认 Shell。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chsh -s /bin/zsh&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;参看：&lt;a href=&#34;https://support.apple.com/zh-cn/HT208050&#34;&gt;在 Mac 上将 zsh 用作默认 Shell&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-安装-oh-my-zsh&#34;&gt;2. 安装 oh-my-zsh&lt;/h2&gt;&#xA;&lt;h3 id=&#34;自动安装&#34;&gt;自动安装&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh -c &amp;quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;quot;&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;也可以手动安装：&lt;/p&gt;&#xA;&lt;h3 id=&#34;手动安装&#34;&gt;手动安装&lt;/h3&gt;&#xA;&lt;p&gt;下载 oh-my-zsh&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --depth=1 https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;备份原有 ~/.zshrc（如果有）&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp ~/.zshrc ~/.zshrc.bak&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;从模板创建 zsh 配置文件&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;3-更改-zsh-主题&#34;&gt;3. 更改 zsh 主题&lt;/h2&gt;&#xA;&lt;p&gt;主题样式 &lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh/wiki/Themes&#34;&gt;这里&lt;/a&gt; 查看。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Homebrew 安装软件加速</title>
      <link>/post/2021/10/23/22/</link>
      <pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate>
      <guid>/post/2021/10/23/22/</guid>
      <description>&lt;h2 id=&#34;加速&#34;&gt;加速&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;安装代理软件 &lt;a href=&#34;https://github.com/yichengchen/clashX&#34;&gt;https://github.com/yichengchen/clashX&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;两种方法&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;方法一（好处：可控，需要进行brew更新才使用；坏处：较为繁琐）&lt;/p&gt;&#xA;&lt;p&gt;在&lt;code&gt;.bashrc&lt;/code&gt;或&lt;code&gt;.zshrc&lt;/code&gt;设置&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# ALIAS&#xD;&#xA;alias proxy=&amp;quot;export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890; echo &#39;Proxy on&#39;&amp;quot;&#xD;&#xA;alias unproxy=&amp;quot;unset https_proxy http_proxy all_proxy; echo &#39;Proxy off&#39;&amp;quot;&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;生效&lt;code&gt;source .zshrc&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;每次iTerm2设置登录执行&lt;code&gt;proxy&lt;/code&gt;或手动执行&lt;code&gt;proxy&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;方法二（好处：便捷；坏处：可能影响其他命令）&lt;/p&gt;&#xA;&lt;p&gt;在&lt;code&gt;.bashrc&lt;/code&gt;或&lt;code&gt;.zshrc&lt;/code&gt;设置&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Proxy&#xD;&#xA;export https_proxy=http://127.0.0.1:7890&#xD;&#xA;export http_proxy=http://127.0.0.1:7890&#xD;&#xA;export all_proxy=socks5://127.0.0.1:7890&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;生效&lt;code&gt;source .zshrc&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;执行命令&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;/bin/bash -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;quot;&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;按照指令安装&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;执行命令查看是否正常&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew -v&#xD;&#xA;&#xA;# output:&#xD;&#xA;# Homebrew 3.2.17-133-g890190c&#xD;&#xA;# Homebrew/homebrew-core (git revision 5d84b1431d6; last commit 2021-10-23)&#xD;&#xA;# Homebrew/homebrew-cask (git revision 65500e81bf; last commit 2021-10-23)&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;常用命令&#34;&gt;常用命令&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;更新 Homebrew 自己&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew update&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;查看哪些安装包需要更新：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew outdated&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;列出已安装包&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew list&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;更新&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew upgrade             # 更新所有的包&#xD;&#xA;brew upgrade $FORMULA    # 更新指定的包&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;清理旧版本&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew cleanup             # 清理所有包的旧版本&#xD;&#xA;brew cleanup $FORMULA    # 清理指定包的旧版本&#xD;&#xA;brew cleanup -n          # 查看可清理的旧版本包，不执行实际操作&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;锁定不想更新的包&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew pin $FORMULA      # 锁定某个包&#xD;&#xA;brew unpin $FORMULA    # 取消锁定&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;查看安装包的相关信息&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew info $FORMULA    # 显示某个包的信息&#xD;&#xA;brew info             # 显示安装了包数量，文件数量，和总占用空间&#xD;&#xA;brew deps --installed --tree # 查看已安装的包的依赖，树形显示&#xD;&#xA;# `brew info` 可以查看包的相关信息，最有用的应该是包依赖和相应的命令。比如 Nginx 会提醒你怎么加 launchctl，PostgreSQL 会告诉你如何迁移数据库。这些信息会在包安装完成后自动显示，如果忘了的话可以用这个命令很方便地查看。&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;删除&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew rm $FORMULA                # 删除某个包&#xD;&#xA;brew uninstall --force $FORMULA # 删除所有版本&#xD;&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
